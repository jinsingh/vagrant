<% if scope.lookupvar('rsyslog::server::enable_udp') -%>
# Load UDP module
$ModLoad imudp
<% end -%>

<% if scope.lookupvar('rsyslog::server::enable_tcp') -%>
# Load TCP module
$ModLoad imtcp
<% end -%>

module(load="omelasticsearch")      # for outputting to Elasticsearch

<% if scope.lookupvar('rsyslog::server::high_precision_timestamps') == false -%>
#
# Use traditional timestamp format. (Why would you even think about doing this?)
# To enable high precision timestamps, comment out the following line.
#
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat
<% end -%>

# this is for index names to be like: logstash-YYYY.MM.DD
template(name="logstash-index" type="list") {
constant(value="logstash-")
property(name="timereported" dateFormat="rfc3339" position.from="1" position.to="4")
constant(value=".")
property(name="timereported" dateFormat="rfc3339" position.from="6" position.to="7")
constant(value=".")
property(name="timereported" dateFormat="rfc3339" position.from="9" position.to="10")
}
# this is for formatting our syslog in JSON with @timestamp
template(name="plain-syslog"
type="list") {
constant(value="{")
constant(value="\"@timestamp\":\"")     property(name="timereported" dateFormat="rfc3339")
constant(value="\",\"host\":\"")        property(name="hostname")
constant(value="\",\"severity\":\"")    property(name="syslogseverity-text")
constant(value="\",\"facility\":\"")    property(name="syslogfacility-text")
constant(value="\",\"tag\":\"")   property(name="syslogtag" format="json")
constant(value="\",\"message\":\"")    property(name="msg" format="json")
constant(value="\"}")
}

# Switch to remote ruleset
$RuleSet remote
*.*     action(type="omelasticsearch" server="<%= scope.lookupvar('rsyslog::server::logaggregator_hostname') %>" template="plain-syslog" searchIndex="logstash-index" dynSearchIndex="on")