lua_package_path '/etc/nginx/conf.d/?.lua;;';

upstream ha_proxy {
    server <%= scope.function_hiera(["capd-ha-virtual-ipaddress"]) %>:<%= scope.function_hiera(["ha-gateway-port"]) %>;
}

upstream frontends {
    server 127.0.0.1:<%= scope.function_hiera(["capd-ssui-port"]) %>;
}

upstream services {
    server <%= scope.function_hiera(["capd-ha-virtual-ipaddress"]) %>:<%= scope.function_hiera(["capd-services-port"]) %>;
}

upstream hippocms {
    server <%= scope.function_hiera(["capd-ha-virtual-ipaddress"]) %>:<%= scope.function_hiera(["capd-hippo-cms-via-haproxy-port"]) %>;
}

upstream playauth {
<% playauthservers = scope.function_hiera(['capd-play-auth-servers'])
    playauthservers.each do | playauthserver | -%>
    server <%= playauthserver %>:<%= scope.function_hiera(['capd-play-auth-port']) %>;
<% end -%>
}

upstream mockidahub {
    server 127.0.0.1:<%= scope.function_hiera(['capd-mock-ida-hub-port']) %>;
}

upstream matching_adapter {
    server <%= scope.function_hiera(["capd-ha-virtual-ipaddress"]) %>:<%= scope.function_hiera(["capd-matching-adapter-port"]) %>;
}

upstream internal_auth {
    server <%= scope.function_hiera(["capd-internal-auth-upstream-server"]) %>;
}

log_format main '$remote_addr - $remote_user [$time_local] $status '
              '"$request" $body_bytes_sent "$http_referer" '
              '"$http_user_agent" "$http_x_forwarded_for"';
log_format upstreamlog '[$time_local] | remote addr: $remote_addr | remote user: $remote_user | server: $server_name | upstream addr: $upstream_addr | request: $request | status: $status | processing (sec): $request_time seconds';

gzip on;
gzip_disable "MSIE [1-6]\.(?!.*SV1)";
gzip_comp_level   7;
gzip_proxied      any;
gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript application/x-navimap;

server_names_hash_bucket_size 128;
server_names_hash_max_size 20000;
proxy_headers_hash_bucket_size 128;
proxy_headers_hash_max_size 20000;

underscores_in_headers on;

#server_tokens off;

server {
<% @server_name = scope.function_hiera(["nginx-server-name", false]) -%>
<% if @server_name -%>
    server_name <%= @server_name %>;
<% end -%>
    error_log /var/log/nginx/error.log notice;
    listen <%= scope.function_hiera(["nginx-port"], '443') %>;
    access_by_lua_file '/etc/nginx/conf.d/access_control.lua';
    access_log  /var/log/nginx/access.log upstreamlog;
<% @enable_tls = scope.function_hiera(["nginx-enable-tls", true]) -%>
<% if @enable_tls -%>
    ssl on;
    ssl_certificate     /etc/pki/tls/certs/<%= scope.function_hiera(["capd-external-web-address"]) %>.crt;
    ssl_certificate_key /etc/pki/tls/private/<%= scope.function_hiera(["capd-external-web-address"]) %>.key;

    proxy_set_header          X-Forwarded-Ssl on;
    ssl_protocols             SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers               ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:EDH-DSS-DES-CBC3-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK;
    ssl_dhparam               /etc/nginx/conf.d/public-dhparam.pem;
    ssl_prefer_server_ciphers on;
    ssl_session_cache         shared:SSL:15m;
    ssl_session_timeout       10m;

    # Strict-Transport-Security should be ENABLED in PROD and ACCEPT only
    # and disabled in integration
    #max-age=31536000 commits to using HSTS for one year
    add_header        Strict-Transport-Security max-age=31536000;
<% end -%>

    add_header        X-Frame-Options sameorigin;
    add_header        X-XSS-Protection 1;
    add_header        X-Content-Type-Options nosniff;

    <% if @osfamily != "Darwin" %>
    add_header        Content-Security-Policy-Report-Only "<%= scope.function_hiera_array(["nginx-content-security-policy-report-only"]).join("; ") %>;";
    <% end -%>

    proxy_ssl_session_reuse   off;

    #rewrite ^/(.*)/$ /$1 permanent;

    location = /robots.txt {
        alias /var/www/robots.txt ;
    }

    location / {
        # temporary basic authentication
        #auth_basic "Restricted";
        #auth_basic_user_file /etc/nginx/conf.d/htpasswd;
        proxy_set_header  X-Real-IP  $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  Host $http_host;
        proxy_redirect    off;
        proxy_max_temp_file_size 0;
        proxy_pass http://frontends;
    }

    location ~* ^/sitiagriapi/ {
    proxy_pass http://ha_proxy;
    proxy_read_timeout 240s;
    }

    location /geoserver {
      proxy_set_header X-Forwarded-Proto HTTPS;
<% @geoserver_proxy_host = scope.function_hiera(["nginx-geoserver-proxy-host", false]) -%>
<% if @geoserver_proxy_host -%>
        proxy_set_header Host <%= @geoserver_proxy_host %>
<% end -%>
      proxy_pass <%= scope.function_hiera(['capd-wms-endpoint']) %>;
    }

    location /login {
        proxy_pass http://playauth;
    }

    location /login/pre_authenticate {
        proxy_pass http://playauth;
    }

    location /lostVerificationCode {
        proxy_pass http://playauth;
    }

    location /authenticate/?.* {
        proxy_pass http://playauth;
    }

    location /register {
        proxy_pass http://playauth;
    }

    location /account {
        proxy_pass http://playauth;
    }

    location /account-locked {
        proxy_pass http://frontends;
    }

    location /assets {
     proxy_pass http://frontends;

     rewrite ^/assets/images/gov-uk-icons/search-icon.png/$ https://<%= scope.function_hiera(["capd-external-web-address"]) %>/assets/images/gov-uk-icons/search-icon.png;

        location  ~* ^.+\.(jpg|png|ico|css|js|html|eot|svg|ttf|woff|otf)$ {
          expires 30d;
          tcp_nodelay off;

          proxy_pass http://frontends;
          proxy_set_header   Host             $host;
          proxy_set_header   X-Real-IP        $remote_addr;
          proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

          proxy_cache               one;
          proxy_cache_key         backend$request_uri;
        }
    }

    location /ida-register {
        proxy_pass http://frontends;
    }

    location /ida-private-beta {
        proxy_pass http://frontends;
    }

    location /hippo/ {
        proxy_pass http://hippocms/;
    }

    location /api/user {
        # Lock /api/user?email=me@here.com to internal service calls only, used only by internal auth
        deny    all;
        proxy_pass http://services/;
    }

    location /api/ {
        proxy_pass http://services/;
    }

    location /mdm-data-load {
        deny all;
        proxy_pass http://services/;
    }

    location /matching-service/SAML2/metadata {
        proxy_pass http://matching_adapter/matching-service/SAML2/metadata;
    }

    location /msa {
        proxy_pass http://matching_adapter/matching-service/POST;
    }

    location /ida-matching-service {
        proxy_pass http://ha_proxy;
    }

    location /api/internal-auth/session {
        internal;
        proxy_pass http://ha_proxy;
    }

    location /auth/validate {
        internal;
        proxy_pass http://ha_proxy;
    }

    location /auth/ida/request {
<% if scope.function_hiera(["capd-ida-private-beta-enabled-flag"]) -%>
        access_by_lua_file '/etc/nginx/conf.d/ida_private_beta_token_validation.lua';
<% end -%>
        proxy_pass http://ha_proxy;
    }
    location /ida_beta_token_validation/ {
        internal;
        proxy_pass <%= scope.function_hiera(["capd-ida-private-beta-token-service-full-url-with-slash"]) %>;
        proxy_pass_request_headers off;
        proxy_set_header Content-Type 'application/json';
        proxy_set_header Authorization <%= scope.function_hiera(["capd-ida-private-beta-token-service-basic-auth-header"]) %>;
    }

    location /ida {
        proxy_pass http://mockidahub;
    }

    location /logout {
        default_type 'text/plain';
        content_by_lua_file '/etc/nginx/conf.d/auth_logout_content.lua';
    }

    location /authentication_endpoint {
        default_type 'text/plain';
        #more_clear_input_headers Accept-Encoding;
        content_by_lua_file '/etc/nginx/conf.d/auth_content.lua';
    }

    location /error/css/ {
        default_type 'text/css';
        root /var/www/;
    }

    location /error/ {
        root /var/www/;
    }

    error_page 500 502 503 504 /error/500.html;
    error_page 401 /start-login;
    error_page 404 /error/404.html;

}
